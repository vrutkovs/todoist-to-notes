[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "todoist-to-notes"
dynamic = ["version"]
description = "Export Todoist tasks as Obsidian notes"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["todoist", "obsidian", "notes", "productivity"]
authors = [
    { name = "User", email = "user@example.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Documentation = "https://github.com/username/todoist-to-notes#readme"
Issues = "https://github.com/username/todoist-to-notes/issues"
Source = "https://github.com/username/todoist-to-notes"

[project.scripts]
todoist-to-notes = "todoist_to_notes.cli:main"

[tool.hatch.version]
path = "src/todoist_to_notes/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/todoist_to_notes"]

[tool.black]
target-version = ["py38"]
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
known_first_party = ["todoist_to_notes"]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [".git", "__pycache__", "dist", "build", "*.egg-info"]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=5.0.4",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "types-requests>=2.32.0.20241016",
]
