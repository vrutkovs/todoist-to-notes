[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "todoist-to-notes"
dynamic = ["version"]
description = "Export Todoist tasks as Obsidian notes"
readme = "README.md"
requires-python = ">=3.13"
license = "Apache-2.0"
keywords = ["todoist", "obsidian", "notes", "productivity"]
authors = [
    { name = "vrutkovs", email = "vadim@vrutkovs.eu" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "types-requests>=2.28.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Documentation = "https://github.com/vrutkovs/todoist-to-notes#readme"
Issues = "https://github.com/vrutkovs/todoist-to-notes/issues"
Source = "https://github.com/vrutkovs/todoist-to-notes"

[project.scripts]
todoist-to-notes = "src.cli:main"

[tool.hatch.version]
path = "src/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
show_error_codes = true
exclude = ["tests/"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "types-requests>=2.32.4.20250913",
]

[tool.ruff.lint.isort]
known-first-party = ["src"]
